<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ideal.Core.Common</name>
    </assembly>
    <members>
        <member name="T:Ideal.Core.Common.Extensions.DateTimeExtension">
            <summary>
            时间相关扩展方法（long类型）
            </summary>
            <summary>
            时间相关扩展方法（string类型）
            </summary>
            <summary>
            时间相关扩展方法（DateTime类型）
            </summary>
            <summary>
            时间相关扩展方法（TimeOnly、DateOnly类型）
            </summary>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToLocalTimeTimeBySeconds(System.Int64)">
            <summary>
            时间戳（秒）转本地时间
            </summary> 
            <param name="timestamp">时间戳（秒）</param>
            <returns>本地时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToLocalTimeTimeByMilliseconds(System.Int64)">
            <summary>
            时间戳（毫秒）转本地时间
            </summary> 
            <param name="timestamp">时间戳（毫秒）</param>
            <returns>本地时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToLocalTimeDateBySeconds(System.Int64)">
            <summary>
            时间戳（秒）转本地日期
            </summary> 
            <param name="timestamp">时间戳（秒）</param>
            <returns>本地日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToLocalTimeDateByMilliseconds(System.Int64)">
            <summary>
            时间戳（毫秒）转本地日期
            </summary> 
            <param name="timestamp">时间戳（毫秒）</param>
            <returns>本地日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToLocalTimeDateTimeBySeconds(System.Int64)">
            <summary>
            时间戳（秒）转本地日期时间
            </summary>
            <param name="timestamp">时间戳（秒）</param>
            <returns>本地日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToLocalTimeDateTimeByMilliseconds(System.Int64)">
            <summary>
            时间戳（毫秒）转本地日期时间
            </summary> 
            <param name="timestamp">时间戳（毫秒）</param>
            <returns>本地日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUniversalTimeTimeBySeconds(System.Int64)">
            <summary>
            时间戳（秒）转UTC时间
            </summary> 
            <param name="timestamp">时间戳（秒）</param>
            <returns>UTC时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUniversalTimeTimeByMilliseconds(System.Int64)">
            <summary>
            时间戳（毫秒）转UTC时间
            </summary> 
            <param name="timestamp">时间戳（毫秒）</param>
            <returns>UTC时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUniversalTimeDateBySeconds(System.Int64)">
            <summary>
            时间戳（秒）转UTC日期
            </summary> 
            <param name="timestamp">时间戳（秒）</param>
            <returns>UTC日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUniversalTimeDateByMilliseconds(System.Int64)">
            <summary>
            时间戳（毫秒）转UTC日期
            </summary> 
            <param name="timestamp">时间戳（毫秒）</param>
            <returns>UTC日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUniversalTimeDateTimeBySeconds(System.Int64)">
            <summary>
            时间戳（秒）转UTC日期时间
            </summary> 
            <param name="timestamp">时间戳（秒）</param>
            <returns>UTC日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUniversalTimeDateTimeByMilliseconds(System.Int64)">
            <summary>
            时间戳（毫秒）转UTC日期时间
            </summary> 
            <param name="timestamp">时间戳（毫秒）</param>
            <returns>UTC日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.String)">
            <summary>
            字符串转日期时间，转换失败则返回空
            </summary>
            <param name="source">需转换的字符串</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTimeOrDefault(System.String,System.DateTime)">
            <summary>
            字符串转日期时间，转换失败则返回默认值
            </summary>
            <param name="source">需转换的字符串</param>
            <param name="dateTime">默认日期时间</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateOnly(System.String)">
            <summary>
            字符串转日期，转换失败则返回空
            </summary>
            <param name="source">需转换的字符串</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateOnlyOrDefault(System.String,System.DateOnly)">
            <summary>
            字符串转日期，转换失败则返回默认日期
            </summary>
            <param name="source">需转换的字符串</param>
            <param name="dateOnly">默认日期</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToTimeOnly(System.String)">
            <summary>
            字符串转时间，转换失败则返回空
            </summary>
            <param name="source">需转换的字符串</param>
            <returns>时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToTimeOnlyOrDefault(System.String,System.TimeOnly)">
            <summary>
            字符串转时间，转换失败则返回默认时间
            </summary>
            <param name="source">需转换的字符串</param>
            <param name="timeOnly">默认时间</param>
            <returns>时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUnixTimestampBySeconds(System.DateTime)">
            <summary>
            日期时间转时间戳（秒）
            </summary>
            <param name="dateTime">日期时间</param>
            <returns>时间戳（秒）</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToUnixTimestampByMilliseconds(System.DateTime)">
            <summary>
            日期时间转时间戳（毫秒）
            </summary> 
            <param name="dateTime">日期时间</param>
            <returns>时间戳（毫秒）</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.DateTime,System.TimeOnly)">
            <summary>
            日期时间中日期部分+时间转日期时间
            </summary>
            <param name="dateTime">日期时间</param>
            <param name="timeOnly">时间</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.DateTime,System.DateOnly)">
            <summary>
            日期+日期时间中时间部分转为日期时间
            </summary>
            <param name="dateTime">日期时间</param>
            <param name="dateOnly">日期</param>
            <returns>日期时间</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateOnly(System.DateTime)" -->
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToTimeOnly(System.DateTime)">
            <summary>
            日期时间转时间，保留日期时间中时间部分
            </summary>
            <param name="dateTime">日期时间</param>
            <returns>时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetStartDateTimeOfDay(System.DateTime)">
            <summary>
            获取当天的开始时间
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期 + 00:00:00</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetEndDateTimeOfDay(System.DateTime)">
            <summary>
            获取当天的结束时间
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期 + 23:59:59 9999999</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.IsWeekend(System.DateTime)">
            <summary>
            判断当前日期是否是周末
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>是否周末</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetFirstDayDateTimeOfWeek(System.DateTime)">
            <summary>
            获取当前日期所在周的第一天（周一）
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetLastDayDateTimeOfWeek(System.DateTime)">
            <summary>
            获取当前日期所在周的最后一天（周日）
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetPreviousDayDateTimeOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            获取当前日期上一个指定星期几
            </summary>
            <param name="dateTime">当前日期时间</param>
            <param name="dayOfWeek">指定星期几</param>
            <returns></returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetNextDayDateTimeOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            获取当前日期下一个最近指定星期几
            </summary>
            <param name="dateTime">当前日期时间</param>
            <param name="dayOfWeek">指定星期几</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetWeekOfMonth(System.DateTime)">
            <summary>
            获取当前日期是其所在月的第几周
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>周数</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetWeeksInMonth(System.DateTime)">
            <summary>
            获取当前日期所在月份的周数
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>周数</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetFirstDayDateTimeOfMonth(System.DateTime)">
            <summary>
            获取当前日期所在月的第一天
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetLastDayDateTimeOfMonth(System.DateTime)">
            <summary>
            获取当前日期所在月的最后一天
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetFirstDayOfWeekDateTimeInMonth(System.DateTime,System.DayOfWeek)">
            <summary>
            获取当前日期所在月的第一个指定星期几
            </summary>
            <param name="dateTime">当前日期时间</param>
            <param name="dayOfWeek">指定星期几</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetLastDayOfWeekDateTimeInMonth(System.DateTime,System.DayOfWeek)">
            <summary>
            获取当前日期所在月的最后一个指定星期几
            </summary>
            <param name="dateTime">当前日期时间</param>
            <param name="dayOfWeek">指定星期几</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetQuarter(System.DateTime)">
            <summary>
            获取当前日期所在季度
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>1，2，3，4</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetFirstDayDateTimeOfQuarter(System.DateTime)">
            <summary>
            获取当前日期所在季度的第一天
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetLastDayDateTimeOfQuarter(System.DateTime)">
            <summary>
            获取当前日期所在季度的最后一天
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.IsLeapYear(System.DateTime)">
            <summary>
            判断当前日期所在年是否是闰年
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>是否闰年</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetWeekOfYear(System.DateTime)">
            <summary>
            获取当前日期是其所在年的第几周（ISO 8601 标准）
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>周数</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetFirstDayDateTimeOfYear(System.DateTime)">
            <summary>
            获取当前日期所在年的第一天
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.GetLastDayDateTimeOfYear(System.DateTime)">
            <summary>
            获取当前日期所在年的最后一天
            </summary>
            <param name="dateTime">当前日期时间</param>
            <returns>日期</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.TimeOnly)">
            <summary>
            时间转日期时间，默认使用系统当前日期+时间转为日期时间格式
            </summary>
            <param name="timeOnly">时间</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.TimeOnly,System.DateOnly)">
            <summary>
            日期+时间转为日期时间
            </summary>
            <param name="timeOnly">时间</param>
            <param name="dateOnly">日期</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.TimeOnly,System.DateTime)">
            <summary>
            日期时间中日期部分+时间转日期时间
            </summary>
            <param name="timeOnly">时间</param>
            <param name="dateTime">日期时间</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.DateOnly)">
            <summary>
            日期转日期时间，日期+默认使用系统当前时间转为日期时间格式
            </summary>
            <param name="dateOnly">日期</param>
            <returns>日期时间</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.DateTimeExtension.ToDateTime(System.DateOnly,System.DateTime)">
            <summary>
            日期+日期时间中时间部分转日期时间
            </summary>
            <param name="dateOnly">日期</param>
            <param name="dateTime">日期时间</param>
            <returns>日期时间</returns>
        </member>
        <member name="T:Ideal.Core.Common.Extensions.EnumExtension">
            <summary>
            枚举相关扩展方法（string类型）
            </summary>
            <summary>
            枚举相关扩展方法（type类型）
            </summary>
            <summary>
            枚举相关扩展方法（私有信息）
            </summary>
            <summary>
            枚举相关扩展方法（sbyte类型）
            </summary>
            <summary>
            枚举相关扩展方法（byte类型）
            </summary>
            <summary>
            枚举相关扩展方法（short类型）
            </summary>
            <summary>
            枚举相关扩展方法（ushort类型）
            </summary>
            <summary>
            枚举相关扩展方法（int类型）
            </summary>
            <summary>
            枚举相关扩展方法（uint类型）
            </summary>
            <summary>
            枚举相关扩展方法（long类型）
            </summary>
            <summary>
            枚举相关扩展方法（ulong类型）
            </summary>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByName``1(System.String)">
            <summary>
            根据枚举名称转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="name">枚举名称</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByName``1(System.String,``0)">
            <summary>
            根据枚举名称转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="name">枚举名称</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueByName``1(System.String)">
            <summary>
            根据枚举名称转换成枚举值，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="name">枚举名称</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueByName``2(System.String)">
            <summary>
            根据枚举名称转换成枚举值，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <typeparam name="TValue">枚举值类型</typeparam>
            <param name="name">枚举名称</param>
            <returns>枚举值</returns>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueOrDefaultByName``1(System.String,System.Int32)">
            <summary>
            根据枚举名称转换成枚举值，转换失败则返回默认枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="name">枚举名称</param>
            <param name="defaultValue">默认枚举值</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueOrDefaultByName``2(System.String,``1)">
            <summary>
            根据枚举名称转换成枚举值，转换失败则返回默认枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <typeparam name="TValue">枚举值类型</typeparam>
            <param name="name">枚举名称</param>
            <param name="defaultValue">默认枚举值</param>
            <returns>枚举值</returns>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByName``1(System.String)">
            <summary>
            根据枚举名称转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="name">枚举名称</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByName``1(System.String,System.String)">
            <summary>
            根据枚举名称转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="name">枚举名称</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByDesc``1(System.String)">
            <summary>
            根据枚举描述转换成枚举，转换失败返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByDesc``1(System.String,``0)">
            <summary>
            根据枚举描述转换成枚举，转换失败返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueByDesc``1(System.String)">
            <summary>
            根据枚举描述转换成枚举值，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueByDesc``2(System.String)">
            <summary>
            根据枚举描述转换成枚举值，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <typeparam name="TValue">枚举值类型</typeparam>
            <param name="description">枚举描述</param>
            <returns>枚举值</returns>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueOrDefaultByDesc``1(System.String,System.Int32)">
            <summary>
            根据枚举描述转换成枚举值，转换失败则返回默认枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <param name="defaultValue">默认枚举值</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueOrDefaultByDesc``2(System.String,``1)">
            <summary>
            根据枚举名称转换成枚举值，转换失败则返回默认枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <typeparam name="TValue">枚举值类型</typeparam>
            <param name="description">枚举描述</param>
            <param name="defaultValue">默认枚举值</param>
            <returns>枚举值</returns>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByDesc``1(System.String)">
            <summary>
            根据枚举描述转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByDesc``1(System.String,System.String)">
            <summary>
            根据枚举描述转换成枚举名称，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValue(System.Enum)">
            <summary>
            枚举项转枚举值
            </summary>
            <param name="source">枚举项</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValue``1(System.Enum)">
            <summary>
            枚举项转枚举值
            </summary>
            <typeparam name="TValue">枚举值</typeparam>
            <param name="source">枚举项</param>
            <returns>枚举值</returns>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDesc(System.Enum)">
            <summary>
            枚举项转枚举描述(Descripion)。
            支持位域，如果是位域组合值，多个值按分隔符[,]组合。
            </summary>
            <param name="source">枚举项</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.GetEnumValueNames(System.Type)">
             <summary>
             获取枚举值+枚举名称
             </summary>
            <param name="type">枚举的类型</param>
             <returns>键值对(枚举值-枚举名称)</returns>
             <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.GetEnumValueNames``1(System.Type)">
            <summary>
            获取枚举值+枚举名称
            </summary>
            <typeparam name="TValue">枚举值</typeparam>
            <param name="type">枚举的类型</param>
            <returns>键值对(枚举值-枚举名称)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueDescs(System.Type)">
            <summary>
            获取枚举值+枚举描述
            </summary>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举值-枚举描述)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumValueDescs``1(System.Type)">
            <summary>
            获取枚举值+枚举描述
            </summary>
            <typeparam name="TValue">枚举值</typeparam>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举值-枚举描述)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.GetEnumNameValues(System.Type)">
            <summary>
            获取枚举名称+枚举值
            </summary>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举名称-枚举值)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.GetEnumNameValues``1(System.Type)">
            <summary>
            获取枚举名称+枚举值
            </summary>
            <typeparam name="TValue">枚举值</typeparam>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举名称-枚举值)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameDescs(System.Type)">
            <summary>
            获取枚举名称+枚举描述
            </summary>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举名称-枚举描述)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescValues(System.Type)">
            <summary>
            获取枚举描述+枚举值
            </summary>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举描述-枚举值)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescValues``1(System.Type)">
            <summary>
             获取枚举描述+枚举值
             </summary>
             <typeparam name="TValue">枚举值</typeparam>
             <param name="type">枚举类型</param>
             <returns>键值对(枚举描述-枚举值)</returns>
             <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescNames(System.Type)">
            <summary>
            获取枚举描述+枚举名称
            </summary>
            <param name="type">枚举类型</param>
            <returns>键值对(枚举描述-枚举名称)</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="T:Ideal.Core.Common.Extensions.EnumExtension.EnumTypeInfo">
            <summary>
            枚举类型基础信息
            </summary>
        </member>
        <member name="P:Ideal.Core.Common.Extensions.EnumExtension.EnumTypeInfo.IsFlags">
            <summary>
            是否是位标志
            </summary>
        </member>
        <member name="P:Ideal.Core.Common.Extensions.EnumExtension.EnumTypeInfo.Mask">
            <summary>
            枚举掩码
            </summary>
        </member>
        <member name="P:Ideal.Core.Common.Extensions.EnumExtension.EnumTypeInfo.Items">
            <summary>
            枚举项集合
            </summary>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.GetEnumTypeInfo(System.Type)">
            <summary>
            根据type获取枚举类型基础信息
            </summary>
            <param name="type">枚举类型</param>
            <returns>EnumTypeInfo</returns>
            <exception cref="T:System.InvalidOperationException">type必须是枚举类型</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.AssertValueTypeValid``1">
            <summary>
            断言值类型有效
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <exception cref="T:System.InvalidOperationException">TValue必须是以下类型：byte, sbyte, short, ushort, int, uint, long, ulong.</exception>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.IsValidFlagsMask``2(``0)">
            <summary>
            计算是否为有效的位标志组合项
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>是否为有效的枚举项</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.GetFieldDescription(System.Reflection.FieldInfo)">
            <summary>
            获取描述信息，如果没有描述信息则取字段名称
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDesc``1(System.String)">
            <summary>
            根据枚举描述转换成枚举
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``2(``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns></returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``2(``0,``1)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``2(``0)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``2(``0,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``2(``0)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``2(``0,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TValue">枚举值类型</typeparam>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.SByte)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.SByte,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.SByte)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.SByte,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.SByte)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.SByte,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.Byte)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.Byte,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.Byte)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.Byte,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.Byte)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.Byte,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.Int16)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.Int16,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.Int16)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.Int16,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.Int16)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.Int16,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.UInt16)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.UInt16,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.UInt16)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.UInt16,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.UInt16)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.UInt16,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.Int32)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.Int32,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.Int32)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.Int32,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.Int32)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.Int32,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.UInt32)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.UInt32,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.UInt32)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.UInt32,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.UInt32)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.UInt32,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.Int64)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.Int64,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.Int64)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.Int64,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.Int64)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.Int64,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumByValue``1(System.UInt64)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumOrDefaultByValue``1(System.UInt64,``0)">
            <summary>
            根据枚举值转换成枚举，转换失败则返回默认枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameByValue``1(System.UInt64)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumNameOrDefaultByValue``1(System.UInt64,System.String)">
            <summary>
            根据枚举值转换成枚举名称，转换失败则返回默认枚举名称
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举名称</param>
            <returns>枚举名称</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescByValue``1(System.UInt64)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回空
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <returns>枚举描述</returns>
        </member>
        <member name="M:Ideal.Core.Common.Extensions.EnumExtension.ToEnumDescOrDefaultByValue``1(System.UInt64,System.String)">
            <summary>
            根据枚举值转换成枚举描述，转换失败则返回默认枚举描述
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="defaultValue">默认枚举描述</param>
            <returns>枚举描述</returns>
        </member>
    </members>
</doc>
